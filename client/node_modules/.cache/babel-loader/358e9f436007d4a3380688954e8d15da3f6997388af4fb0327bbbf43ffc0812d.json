{"ast":null,"code":"var _jsxFileName = \"D:\\\\fd download\\\\expense-management-project\\\\expense-management-project\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ExpenseForm from \"./components/ExpenseForm\";\nimport ExpenseList from \"./components/ExpenseList\";\nimport ExpenseCharts from \"./components/ExpenseCharts\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [prediction, setPrediction] = useState(null);\n  const [loadingPred, setLoadingPred] = useState(false);\n  const fetchExpenses = async () => {\n    const res = await axios.get(\"http://localhost:5000/api/expenses\");\n    setExpenses(res.data);\n  };\n  useEffect(() => {\n    fetchExpenses();\n  }, []);\n  const addExpense = async expense => {\n    await axios.post(\"http://localhost:5000/api/expenses\", expense);\n    fetchExpenses();\n  };\n  const predictNextMonth = async () => {\n    setLoadingPred(true);\n    const monthlyTotals = expenses.reduce((acc, e) => {\n      const month = e.date.slice(0, 7);\n      acc[month] = (acc[month] || 0) + parseFloat(e.amount);\n      return acc;\n    }, {});\n    const sortedMonths = Object.keys(monthlyTotals).sort();\n    const monthlyExpensesArray = sortedMonths.map(m => monthlyTotals[m]);\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/predict\", {\n        monthly_expenses: monthlyExpensesArray\n      });\n      setPrediction(res.data);\n    } catch (error) {\n      alert(\"Failed to get prediction\");\n    }\n    setLoadingPred(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"Expense Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onAdd: addExpense\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseList, {\n      expenses: expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: predictNextMonth,\n      className: \"mb-4 bg-green-600 text-white px-4 py-2 rounded\",\n      disabled: loadingPred || expenses.length === 0,\n      children: loadingPred ? \"Predicting...\" : \"Predict Next Month Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-100 p-4 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Predictions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Linear Regression: \\u20B9\", prediction.linear_regression_prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Neural Network: \\u20B9\", prediction.neural_net_prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseCharts, {\n      expenses: expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"cmuHlJGgeDA9d1IJTp0+IwjefyU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ExpenseForm","ExpenseList","ExpenseCharts","axios","jsxDEV","_jsxDEV","App","_s","expenses","setExpenses","prediction","setPrediction","loadingPred","setLoadingPred","fetchExpenses","res","get","data","addExpense","expense","post","predictNextMonth","monthlyTotals","reduce","acc","e","month","date","slice","parseFloat","amount","sortedMonths","Object","keys","sort","monthlyExpensesArray","map","m","monthly_expenses","error","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","onClick","disabled","length","linear_regression_prediction","neural_net_prediction","_c","$RefreshReg$"],"sources":["D:/fd download/expense-management-project/expense-management-project/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ExpenseForm from \"./components/ExpenseForm\";\nimport ExpenseList from \"./components/ExpenseList\";\nimport ExpenseCharts from \"./components/ExpenseCharts\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [expenses, setExpenses] = useState([]);\n  const [prediction, setPrediction] = useState(null);\n  const [loadingPred, setLoadingPred] = useState(false);\n\n  const fetchExpenses = async () => {\n    const res = await axios.get(\"http://localhost:5000/api/expenses\");\n    setExpenses(res.data);\n  };\n\n  useEffect(() => {\n    fetchExpenses();\n  }, []);\n\n  const addExpense = async (expense) => {\n    await axios.post(\"http://localhost:5000/api/expenses\", expense);\n    fetchExpenses();\n  };\n\n  const predictNextMonth = async () => {\n    setLoadingPred(true);\n    const monthlyTotals = expenses.reduce((acc, e) => {\n      const month = e.date.slice(0, 7);\n      acc[month] = (acc[month] || 0) + parseFloat(e.amount);\n      return acc;\n    }, {});\n\n    const sortedMonths = Object.keys(monthlyTotals).sort();\n    const monthlyExpensesArray = sortedMonths.map((m) => monthlyTotals[m]);\n\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/predict\", {\n        monthly_expenses: monthlyExpensesArray,\n      });\n      setPrediction(res.data);\n    } catch (error) {\n      alert(\"Failed to get prediction\");\n    }\n    setLoadingPred(false);\n  };\n\n  return (\n    <div className=\"p-6 max-w-4xl mx-auto\">\n      <h1 className=\"text-3xl font-bold mb-4\">Expense Manager</h1>\n      <ExpenseForm onAdd={addExpense} />\n      <ExpenseList expenses={expenses} />\n\n      <button\n        onClick={predictNextMonth}\n        className=\"mb-4 bg-green-600 text-white px-4 py-2 rounded\"\n        disabled={loadingPred || expenses.length === 0}\n      >\n        {loadingPred ? \"Predicting...\" : \"Predict Next Month Expense\"}\n      </button>\n\n      {prediction && (\n        <div className=\"bg-green-100 p-4 rounded\">\n          <h2 className=\"text-xl font-semibold mb-2\">Predictions</h2>\n          <p>Linear Regression: ₹{prediction.linear_regression_prediction}</p>\n          <p>Neural Network: ₹{prediction.neural_net_prediction}</p>\n        </div>\n      )}\n\n      <ExpenseCharts expenses={expenses} />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}