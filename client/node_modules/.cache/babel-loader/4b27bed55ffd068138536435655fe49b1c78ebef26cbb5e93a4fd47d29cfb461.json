{"ast":null,"code":"var _jsxFileName = \"D:\\\\fd download\\\\expense-management-project\\\\expense-management-project\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ExpenseForm from \"./components/ExpenseForm\";\nimport ExpenseList from \"./components/ExpenseList\";\nimport ExpenseCharts from \"./components/ExpenseCharts\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [prediction, setPrediction] = useState(null);\n  const [loadingPred, setLoadingPred] = useState(false);\n  const [monthInput, setMonthInput] = useState(\"\"); // <-- added this\n\n  const fetchExpenses = async () => {\n    const res = await axios.get(\"http://localhost:5000/api/expenses\");\n    setExpenses(res.data);\n  };\n  useEffect(() => {\n    fetchExpenses();\n  }, []);\n  const addExpense = async expense => {\n    await axios.post(\"http://localhost:5000/api/expenses\", expense);\n    fetchExpenses();\n  };\n  const predictNextMonth = async () => {\n    setLoadingPred(true);\n    const monthlyTotals = expenses.reduce((acc, e) => {\n      const month = e.date.slice(0, 7);\n      acc[month] = (acc[month] || 0) + parseFloat(e.amount);\n      return acc;\n    }, {});\n    const sortedMonths = Object.keys(monthlyTotals).sort();\n    const monthlyExpensesArray = sortedMonths.map(m => monthlyTotals[m]);\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/predict\", {\n        monthly_expenses: monthlyExpensesArray\n      });\n      setPrediction(res.data);\n    } catch (error) {\n      alert(\"Failed to get prediction\");\n    }\n    setLoadingPred(false);\n  };\n\n  // New function for prediction of a specific month using monthInput\n  const predictForMonth = async () => {\n    if (!monthInput) {\n      alert(\"Please enter a month in YYYY-MM format\");\n      return;\n    }\n    setLoadingPred(true);\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/predict-month\", {\n        month: monthInput,\n        expenses\n      });\n      setPrediction(res.data);\n    } catch (error) {\n      alert(\"Failed to get prediction for the month\");\n    }\n    setLoadingPred(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"Expense Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onAdd: addExpense\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseList, {\n      expenses: expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter Month (YYYY-MM):\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: monthInput,\n          onChange: e => setMonthInput(e.target.value),\n          placeholder: \"2023-06\",\n          className: \"border px-2 py-1 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: predictForMonth,\n      className: \"mb-4 bg-blue-600 text-white px-4 py-2 rounded\",\n      disabled: loadingPred,\n      children: loadingPred ? \"Predicting...\" : \"Predict Expense for Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: predictNextMonth,\n      className: \"mb-4 bg-green-600 text-white px-4 py-2 rounded\",\n      disabled: loadingPred || expenses.length === 0,\n      children: loadingPred ? \"Predicting...\" : \"Predict Next Month Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-100 p-4 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Predictions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Linear Regression: \\u20B9\", prediction.linear_regression_prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Neural Network: \\u20B9\", prediction.neural_net_prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseCharts, {\n      expenses: expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"CWU3muxNXOauSCheEXCUrafbDKQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ExpenseForm","ExpenseList","ExpenseCharts","axios","jsxDEV","_jsxDEV","App","_s","expenses","setExpenses","prediction","setPrediction","loadingPred","setLoadingPred","monthInput","setMonthInput","fetchExpenses","res","get","data","addExpense","expense","post","predictNextMonth","monthlyTotals","reduce","acc","e","month","date","slice","parseFloat","amount","sortedMonths","Object","keys","sort","monthlyExpensesArray","map","m","monthly_expenses","error","alert","predictForMonth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","type","value","onChange","target","placeholder","onClick","disabled","length","linear_regression_prediction","neural_net_prediction","_c","$RefreshReg$"],"sources":["D:/fd download/expense-management-project/expense-management-project/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ExpenseForm from \"./components/ExpenseForm\";\nimport ExpenseList from \"./components/ExpenseList\";\nimport ExpenseCharts from \"./components/ExpenseCharts\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [expenses, setExpenses] = useState([]);\n  const [prediction, setPrediction] = useState(null);\n  const [loadingPred, setLoadingPred] = useState(false);\n  const [monthInput, setMonthInput] = useState(\"\");  // <-- added this\n\n  const fetchExpenses = async () => {\n    const res = await axios.get(\"http://localhost:5000/api/expenses\");\n    setExpenses(res.data);\n  };\n\n  useEffect(() => {\n    fetchExpenses();\n  }, []);\n\n  const addExpense = async (expense) => {\n    await axios.post(\"http://localhost:5000/api/expenses\", expense);\n    fetchExpenses();\n  };\n\n  const predictNextMonth = async () => {\n    setLoadingPred(true);\n    const monthlyTotals = expenses.reduce((acc, e) => {\n      const month = e.date.slice(0, 7);\n      acc[month] = (acc[month] || 0) + parseFloat(e.amount);\n      return acc;\n    }, {});\n\n    const sortedMonths = Object.keys(monthlyTotals).sort();\n    const monthlyExpensesArray = sortedMonths.map((m) => monthlyTotals[m]);\n\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/predict\", {\n        monthly_expenses: monthlyExpensesArray,\n      });\n      setPrediction(res.data);\n    } catch (error) {\n      alert(\"Failed to get prediction\");\n    }\n    setLoadingPred(false);\n  };\n\n  // New function for prediction of a specific month using monthInput\n  const predictForMonth = async () => {\n    if (!monthInput) {\n      alert(\"Please enter a month in YYYY-MM format\");\n      return;\n    }\n    setLoadingPred(true);\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/predict-month\", {\n        month: monthInput,\n        expenses,\n      });\n      setPrediction(res.data);\n    } catch (error) {\n      alert(\"Failed to get prediction for the month\");\n    }\n    setLoadingPred(false);\n  };\n\n  return (\n    <div className=\"p-6 max-w-4xl mx-auto\">\n      <h1 className=\"text-3xl font-bold mb-4\">Expense Manager</h1>\n      <ExpenseForm onAdd={addExpense} />\n      <ExpenseList expenses={expenses} />\n\n      {/* Manual month input */}\n      <div className=\"mb-4\">\n        <label>\n          Enter Month (YYYY-MM):{\" \"}\n          <input\n            type=\"text\"\n            value={monthInput}\n            onChange={(e) => setMonthInput(e.target.value)}\n            placeholder=\"2023-06\"\n            className=\"border px-2 py-1 rounded\"\n          />\n        </label>\n      </div>\n\n      {/* Button for manual month prediction */}\n      <button\n        onClick={predictForMonth}\n        className=\"mb-4 bg-blue-600 text-white px-4 py-2 rounded\"\n        disabled={loadingPred}\n      >\n        {loadingPred ? \"Predicting...\" : \"Predict Expense for Month\"}\n      </button>\n\n      {/* Button for next month prediction */}\n      <button\n        onClick={predictNextMonth}\n        className=\"mb-4 bg-green-600 text-white px-4 py-2 rounded\"\n        disabled={loadingPred || expenses.length === 0}\n      >\n        {loadingPred ? \"Predicting...\" : \"Predict Next Month Expense\"}\n      </button>\n\n      {prediction && (\n        <div className=\"bg-green-100 p-4 rounded\">\n          <h2 className=\"text-xl font-semibold mb-2\">Predictions</h2>\n          <p>Linear Regression: ₹{prediction.linear_regression_prediction}</p>\n          <p>Neural Network: ₹{prediction.neural_net_prediction}</p>\n        </div>\n      )}\n\n      <ExpenseCharts expenses={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}